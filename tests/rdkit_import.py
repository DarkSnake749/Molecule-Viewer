# Code generated by ChatGPT 5.0

from rdkit import Chem
from rdkit.Chem import AllChem

def smiles_to_3d_data(smiles: str):
    """
    Convert a SMILES string into a simple, structured 3D molecular representation.

    Returns
    -------
    dict with:
        - 'atoms': list of {'element', 'x', 'y', 'z'}
        - 'bonds': list of {'start', 'end', 'order'}
    """
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        raise ValueError(f"Invalid SMILES: {smiles}")

    mol = Chem.AddHs(mol)
    params = AllChem.ETKDGv3()
    params.randomSeed = 0xf00d
    if AllChem.EmbedMolecule(mol, params) != 0:
        raise RuntimeError("3D embedding failed")
    AllChem.UFFOptimizeMolecule(mol)

    conf = mol.GetConformer()

    # Collect atoms
    atoms = []
    for atom in mol.GetAtoms():
        pos = conf.GetAtomPosition(atom.GetIdx())
        atoms.append({
            "element": atom.GetSymbol(),
            "x": pos.x,
            "y": pos.y,
            "z": pos.z
        })

    # Collect bonds
    bonds = []
    for bond in mol.GetBonds():
        bonds.append({
            "start": bond.GetBeginAtomIdx(),
            "end": bond.GetEndAtomIdx(),
            "order": bond.GetBondTypeAsDouble()
        })

    return {
        "atoms": atoms,
        "bonds": bonds
    }

data = smiles_to_3d_data("CCO")
print(data)
